version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile}
    ports:
      - "3000:3000"
    depends_on:
      - db_dev
      - db_prod
    environment:
      DB_DEV_URL: postgresql://postgres:postgres@db_dev:5432/dev
      DB_PROD_URL: postgresql://postgres:postgres@db_prod:5432/pro
      NODE_ENV: ${NODE_ENV:-development}
    volumes:
      - ${CODE_MOUNT:-/app}:/app
      - /app/node_modules
      - ./wait-for.sh:/wait-for.sh
    command: >
      /bin/sh -c "./wait-for.sh db_dev true &&
                  ./wait-for.sh db_prod true &&
                  ${START_CMD:-npm run dev}"

  db_dev:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dev
    ports:
      - "5432:5432"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
      - ./seed/init-common.sql:/docker-entrypoint-initdb.d/00-init-common.sql
      - ./seed/init-dev.sql:/docker-entrypoint-initdb.d/01-init-dev.sql

  db_prod:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pro
    ports:
      - "5433:5432"
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
      - ./seed/init-common.sql:/docker-entrypoint-initdb.d/00-init-common.sql
      - ./seed/init-pro.sql:/docker-entrypoint-initdb.d/01-init-pro.sql

volumes:
  pgdata_dev:
  pgdata_prod:
